# This file defines result types returned by various parsing modules

# return RETRIEVE_FAILED if we couldn't get the data from the website
# (for whatever reason)
RETRIEVE_FAILED = 0

# TODO: this should be PARSING_FAILED
# return UNKNOWN_FORMAT if the parser couldn't parse data we retrieved
# from the website
UNKNOWN_FORMAT = 1
PARSING_FAILED = 1 # yes, they are the same. in the future we'll just remove UNKOWN_FORMAT

NO_RESULTS = 2
MULTIPLE_SELECT = 3
RESULTS_DATA = 4
TOO_MANY_RESULTS = 5

NO_CITY = 6

RECIPE_DATA = 7
LIST_OF_RECIPES = 8
EMPTY_LIST = 9

JOKES_LIST = 10
JOKE_DATA = 9

MOVIES_DATA = 11
LIST_OF_LOCATION = 12
LOCATION_UNKNOWN = 13

WEATHER_DATA = 14
LOCATION_MULTISELECT = 15

DREAM_DATA = 16

STOCKS_DATA = 17
STOCKS_LIST = 18
VALIDATE_THIS = 19

AMAZON_ITEM = 20
AMAZON_SEARCH_LIST = 21
AMAZON_BROWSE_LIST = 22

GAS_DATA = 23

NETFLIX_ITEM = 24
NETFLIX_SEARCH_LIST = 25
NETFLIX_BROWSE_LIST = 26
NETFLIX_REQUEST_PASSWORD = 27
NETFLIX_UNKNOWN_LOGIN = 28
NETFLIX_LOGIN_OK = 29

LISTSOFBESTS_LISTS = 30
LISTSOFBESTS_LIST = 31
LISTSOFBESTS_DETAILS = 32
LISTSOFBESTS_SEARCH = 33

TVLISTINGS_PROVIDERS = 34
TVLISTINGS_DATA = 35
TVLISTINGS_DETAILS = 36

LYRICS_ITEM = 37
LYRICS_SEARCH = 38

TVLISTINGS_PROVIDERS = 39
TVLISTINGS_PARTIAL = 40
TVLISTINGS_FULL = 41

WEB_PAGE_UNDER_MAINTENANCE = 42

MODULE_DOWN = 43

INVALID_REQUEST = 44

DICT_DEF = 45

HOROSCOPE_DATA = 46

NETFLIX_QUEUE = 47
NETFLIX_ADD_OK = 48
NETFLIX_ADD_ALREADY_IN_QUEUE = 49
NETFLIX_ADD_FAILED = 50

QUOTES_DATA = 51

EBAY_DATA = 52
EBAY_REQUEST_PASSWORD = 53
EBAY_UNKNOWN_LOGIN = 54
EBAY_LOGIN_OK = 55
EBAY_DATA_NO_CACHE = 56

def resultTypeName(resType):
    mapping = [(RETRIEVE_FAILED, "RETRIEVE_FAILED"), (UNKNOWN_FORMAT, "UNKNOWN_FORMAT"),
               (AMAZON_ITEM, "AMAZON_ITEM"), (AMAZON_SEARCH_LIST, "AMAZON_SEARCH_LIST"),
               (AMAZON_BROWSE_LIST, "AMAZON_BROWSE_LIST"), (NO_RESULTS, "NO_RESULTS"),
               (RESULTS_DATA, "RESULTS_DATA")]
    for el in mapping:
        if el[0] == resType:
            return el[1]
    return None

def retrieveFailed(url):
    return (RETRIEVE_FAILED, url)

def parsingFailed(url, htmlTxt):
    return (PARSING_FAILED, (url, htmlTxt))
